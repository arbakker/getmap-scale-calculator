{"version":3,"sources":["../src/format/XLink.js","src/array.js","src/xml.js","../src/format/XML.js","src/string.js","../src/format/xsd.js","../src/format/WMSCapabilities.js","index.js"],"names":["calculateScale","queryParams","DPI","widthMapPixels","heightMapPixels","bboxArray","split","widthReal","heightReal","widthMapMeters","heightMapMeters","scaleX","Math","round","scaleY","getQueryParams","urlString","getMapUrlObject","URL","queryString","decodeURIComponent","search","indexOf","substr","forEach","el","key","toUpperCase","value","isValidHttpUrl","url","_","protocol","isValidGetMapUrl","console","log","BBOX","REQUEST","SERVICE","VERSION","WIDTH","HEIGHT","LAYERS","CRS","containsOneLayer","containsMapResolutionParam","isNaN","MAP_RESOLUTION","getDPIFromUrl","fillDPIField","dpiEl","document","getElementById","dpiFromURL","validate","getMapUrl","innerHTML","urlChanged","getMapUrlEl","getMapImageEl","imageLoaderEl","src","style","display","addEventListener","loaded","border","scales","resultEl","capUrl","getCapabilitiesURL","parser","WMSCapabilities","fetch","then","response","text","result","maxScale","minScale","layers","unpackLayers","read","Capability","lyr","Name","MinScaleDenominator","MaxScaleDenominator","htmlString","urlObj","serviceURL","host","port","pathname","capObj","Array","isArray","Layer","push","window","onload"],"mappings":"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","file":"wms-bbox-tool.dd7ac0e9.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = [];\n          object[property] = array;\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readFromNode(/** @type {Element} */ (source));\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {}\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nclass WMSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFromNode(node) {\n    this.version = node.getAttribute('version').trim();\n    const wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","import WMSCapabilities from 'ol/format/WMSCapabilities'\n\n\nfunction calculateScale(queryParams, DPI){\n    let widthMapPixels = queryParams[\"WIDTH\"]\n    let heightMapPixels = queryParams[\"HEIGHT\"]\n\n    let bboxArray = queryParams[\"BBOX\"].split(\",\")\n    let widthReal = bboxArray[2] - bboxArray[0]\n    let heightReal = bboxArray[3] - bboxArray[1]\n\n    let widthMapInches = widthMapPixels/DPI\n    let heightMapInches = heightMapPixels/DPI\n\n    let widthMapMeters = (widthMapInches * 2.54)/100\n    let heightMapMeters = (heightMapInches * 2.54)/100\n\n    let scaleX = Math.round(widthReal / widthMapMeters)\n    let scaleY = Math.round(heightReal / heightMapMeters)\n    return {\"scaleX\": scaleX, \"scaleY\": scaleY}\n}\n\nfunction getQueryParams(urlString){\n    let getMapUrlObject = new URL(urlString)\n    let queryParams = {}\n    let queryString = decodeURIComponent(getMapUrlObject.search)\n    if (queryString.indexOf(\"?\") === 0){\n        queryString = queryString.substr(1)\n    }\n    queryString.split(\"&\").forEach(function(el){\n        let key = el.split(\"=\")[0].toUpperCase()\n        let value = el.split(\"=\")[1]\n        queryParams[key]=value\n    })\n    return queryParams\n}\n\nfunction isValidHttpUrl(urlString) {\n    let url\n    try {\n      url = new URL(urlString)\n    } catch (_) {\n      return false\n    }\n    return url.protocol === \"http:\" || url.protocol === \"https:\"\n}\n\nfunction isValidGetMapUrl(urlString){\n    let queryParams = getQueryParams(urlString)\n    console.log(queryParams)\n    if (\"BBOX\" in queryParams && queryParams.BBOX  && \n    \"REQUEST\" in queryParams && queryParams.REQUEST.toUpperCase() === \"GETMAP\" &&\n    \"SERVICE\" in queryParams && queryParams.SERVICE.toUpperCase() === \"WMS\" &&\n    \"VERSION\" in queryParams && queryParams.VERSION === \"1.3.0\" &&\n    \"WIDTH\" in queryParams && queryParams.WIDTH &&\n    \"HEIGHT\" in queryParams && queryParams.HEIGHT &&\n    \"LAYERS\" in queryParams && queryParams.LAYERS &&\n    \"CRS\" in queryParams && queryParams.CRS === \"EPSG:28992\"\n    ){\n        return true\n    }\n    return false\n}\n\nfunction containsOneLayer(urlString){\n    let queryParams = getQueryParams(urlString)\n    if (queryParams.LAYERS.indexOf(\",\") === -1){\n        return true\n    }\n    return false\n}\n\nfunction containsMapResolutionParam(urlString){\n    let queryParams = getQueryParams(urlString)\n    if (\"MAP_RESOLUTION\" in queryParams && ! isNaN(queryParams.MAP_RESOLUTION)){\n        return true\n    }\n    return false\n}\n\n\nfunction getDPIFromUrl(urlString){\n    // multiple parameters are in use to specify dpi\n    // DPI=96&MAP_RESOLUTION=72&FORMAT_OPTIONS=dpi:96\n    // mapserver uses MAP_RESOLUTION\n    let queryParams = getQueryParams(urlString)\n    if (\"MAP_RESOLUTION\" in queryParams){\n        return queryParams.MAP_RESOLUTION\n    }\n    return \"\"\n}\n\nfunction fillDPIField(urlString){\n    let dpiEl = document.getElementById(\"DPI\")\n    let dpiFromURL = getDPIFromUrl(urlString)\n    if (! dpiFromURL){\n        dpiFromURL = \"72\"\n    }\n    dpiEl.value = dpiFromURL\n}\n\nfunction validate(getMapUrl){\n    if (!getMapUrl){\n        // do nothing if url empty\n        return false\n    }\n\n    if (! isValidHttpUrl(getMapUrl)){\n        console.log(\"Not a valid url provided\")\n        document.getElementById(\"error\").innerHTML = \"Not a valid url provided\"\n        return false\n    }\n\n    if (! isValidGetMapUrl(getMapUrl)){\n        console.log(\"Not a valid WMS GetMap 1.3.0 url provided\")\n        document.getElementById(\"error\").innerHTML = \"Not a valid WMS GetMap 1.3.0 url provided\"\n        return false\n    }\n\n    if (! containsMapResolutionParam(getMapUrl)){\n        console.log(\"URL does not contain MAP_RESOLUTION query parameter. Required to determine scale of GetMap request. For example \\\"MAP_RESOLUTION=72\\\".\")\n        document.getElementById(\"error\").innerHTML = \"URL does not contain MAP_RESOLUTION query parameter. Required to determine scale of GetMap request.\"\n        return false\n    }\n\n    if (!containsOneLayer(getMapUrl)){\n        console.log(\"GetMap request contains more than one layer, application can only validate GetMap requests with a single layer.\")\n        document.getElementById(\"error\").innerHTML = \"GetMap request contains more than one layer, application can only validate GetMap requests with a single layer.\"\n        return false\n    }\n    return true\n}\n\n\nfunction urlChanged(){\n    let getMapUrl = getMapUrlEl.value\n    if (! validate(getMapUrl)){\n        return\n    }\n\n    document.getElementById(\"error\").innerHTML = \"\"\n    let getMapImageEl = document.getElementById(\"GetMapImage\")\n    let imageLoaderEl = document.getElementById(\"ImageLoader\")\n    getMapImageEl.src = \"\"\n    getMapImageEl.style.display = \"block\"\n    let DPI = getDPIFromUrl(getMapUrl)\n\n    getMapImageEl.addEventListener('load',loaded)\n    getMapImageEl.addEventListener('error',loaded)\n    \n    getMapImageEl.style.border = \"unset\"\n    imageLoaderEl.style.display = \"block\"\n    getMapImageEl.src = getMapUrl\n    let queryParams = getQueryParams(getMapUrl)\n    let scales = calculateScale(queryParams, DPI)\n    let resultEl = document.getElementById(\"result\")\n    \n\n    const capUrl = getCapabilitiesURL(getMapUrl)\n    const parser = new WMSCapabilities()\n    fetch(capUrl).then(function (response) {\n        return response.text()\n    }).then(function (text) {\n        var result = parser.read(text)\n        let layers = []\n        layers = unpackLayers(result.Capability, layers)\n    \n        let maxScale\n        let minScale\n        layers.forEach(function (lyr) {\n            if (lyr.Name === queryParams.LAYERS){\n                minScale = lyr.MinScaleDenominator\n                maxScale = lyr.MaxScaleDenominator\n            }\n        })\n        let htmlString = `<b>ScaleDenominator: </b>${scales[\"scaleX\"]}<br><b>DPI: </b>${DPI}<br><b>Layer: </b>${queryParams.LAYERS}`\n        if (maxScale){\n            htmlString += `<br><b>MaxScaleDenominator: </b>${maxScale}`\n        }\n        if (minScale){\n            htmlString += `<br><b>MinScaleDenominator: </b>${minScale}`\n        }\n        htmlString += `<br><a href=\"${capUrl}\">Capabilities Document</a>`\n        resultEl.innerHTML = htmlString\n    })\n}\n\nfunction loaded() {\n    let imageLoaderEl = document.getElementById(\"ImageLoader\")\n    let getMapImageEl = document.getElementById(\"GetMapImage\")\n    imageLoaderEl.style.display = \"none\"\n    getMapImageEl.style.border = \"solid 1px\"\n}\n\nfunction getCapabilitiesURL(getMapUrl){\n    const urlObj = new URL(getMapUrl)\n    const serviceURL = `${urlObj.protocol}//${urlObj.host}:${urlObj.port}${urlObj.pathname}`\n    const capUrl = `${serviceURL}?service=WMS&request=GetCapabilities`\n    return capUrl\n}\n\nfunction unpackLayers(capObj, result){\n    if (!Array.isArray(capObj)){\n      capObj = [capObj]\n    }\n    capObj.forEach(function(lyr){\n      if (\"Layer\" in lyr){\n        unpackLayers(lyr.Layer, result)\n      }else{\n        result.push(lyr)\n      }\n    })\n    return result \n  }\n\n\nlet getMapUrlEl = document.getElementById(\"GetMapUrl\")\ngetMapUrlEl.addEventListener('input', urlChanged)\nwindow.onload = urlChanged "]}